openapi: 3.0.3
info:
  title: Warehouse Service
  version: '1.0.0'
  description: |
    The warehouse service specs

servers:
  - url: https://warehouse.duartefigueiredo.pt

tags:
  - name: products
    description: |

paths:
  /products/:
    get:
      tags:
        - products
      summary: Clients should be able to see a list of available products in the warehouse.
      description: It returns all products from the warehouse, even if their quantity is 0.
      responses:
        '200':
          description: Returns all products in the warehouse.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /products/{category}/{brand}/{maxPrice}:
    get:
      tags:
        - products
      summary: Clients should be able to get products based on product category, brand and maximum price
      description: Enables filtering products by category, name, and maximum price. It's not possible to filter only by one of those fields. The 3 fiels are aplyed simultaneously.
      parameters:
      - in: path
        name: category
        description: Category of the product.
        required: true
        schema:
          type: string
          example: Rice
      - in: path
        name: brand
        description: Name of the brand.
        required: true
        schema:
          type: string
          example: Sigala
      - in: path
        name: maxPrice
        description: Maximum price value to be accepted by the given product
        required: true
        schema:
          type: number
          example: 1.01
      responses:
        '200':
          description: return products within the needed filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: "Needle Rice"
        brand:
          type: string
          example: "Sigala"
        category:
          type: string
          example: "Rice"
        price:
          type: number
          example: 1.01Â´
    Order:
      type: object
      properties:
        id:
          type: number
          example: 1
        categoriesProducts:
          type: string
          example: "Rice, Milk, Cheese"
        maxPrices:
          type: string
          example: "2, 1, 2"
        quantities:
          type: string
          example: "2, 2, 2"
    postProductsResult:
      type: object
      properties:
        result:
          type: integer
          example: 20